ext {
    projectName = rootProject.name
    projectVersion = project.version
    buildNumber = System.getenv("BUILD_NUMBER") ?: "lcoal"
    jobName = System.getenv("JOB_NAME") ?: name
    buildUrl = System.getenv("BUILD_URL") ?: "http://local-build"
    revision = System.getenv("GIT_COMMIT") ?: "local"
    timestamp = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    buildDir = relativePath("./build")

}

project.group='com.stayrascal.aws'
project.version= buildNumber

buildscript {
    ext {
        springbootVersion = '1.5.1.RELEASE'
//    springbootVersion = '2.0.0.BUILD-SNAPSHOT'
    }
    repositories {
        jcenter()
        mavenLocal()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springbootVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

sourceSets {
    test {
        java {
            srcDir 'src/test/unit/java'
        }
        resources {
            srcDir 'src/test/unit/resources'
        }
    }
    integrationTest {
        java {
            srcDir 'src/test/intg/java'
        }
        resources {
            srcDir 'src/test/intg/resources'
            srcDir 'config/application/environment/local'
        }
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/reports/jacoco") // default value
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            logger.lifecycle("=============" + it + "===========")
            fileTree(dir: it,
                    include: ['com.stayrascal.services.domain.model.github/*'])
        })
    }
}



dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-actuator")
//    compile("org.springframework.security:spring-security-ladp")
    compile("org.springframework.cloud:spring-cloud-starter-hystrix")
    compile("org.springframework.boot:spring-boot-configuration-processor")
//    compile("org.springframework.hateoas:spring-hateos")
    compile("io.reactivex:rxjava:1.2.5")
    compile("org.jadira.usertype:usertype.extended:5.0.0.GA")
    compile("com.google.guava:guava:21.0")
    compile("joda-time:joda-time:2.9.7")
    runtime('com.h2database:h2')
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR5'
    }
}
